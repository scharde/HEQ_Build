{"version":3,"sources":["../../doar-shared/images/img15.png","components-doar/signin-form/style.tsx","components-doar/signin-form/index.tsx","containers/signin/style.tsx","containers/signin/index.tsx","modules/auth/signin.tsx"],"names":["StyledWrap","styled","div","StyledTitle","h3","themeGet","StyledDesc","p","StyledLabelWrap","StyledBottomText","SigninForm","dispatch","useAppDispatch","authState","useAppSelector","state","auth","useForm","register","handleSubmit","errors","formState","loggedInUserData","to","action","onSubmit","data","authenticateUserAsync","noValidate","mb","display","htmlFor","type","id","placeholder","feedbackText","email","message","hasKey","showState","required","pattern","value","path","fontSize","password","minLength","maxLength","color","fullwidth","status","size","StyledMedia","rest","StyledMediaBody","device","large","StyledImage","StyledSignin","xlarge","AuthContainer","src","loginImage","alt","SignIn"],"mappings":"6IAAe,MAA0B,kC,ovCCElC,IAAMA,EAAaC,IAAOC,IAAV,KAIVC,EAAcF,IAAOG,GAAV,IACXC,YAAS,gBAITC,EAAaL,IAAOM,EAAV,IAEVF,YAAS,iBAITG,EAAkBP,IAAOC,IAAV,KAiCfO,GA3BgBR,IAAOC,IAAV,IAKbG,YAAS,gBAGHA,YAAS,iBASAA,YAAS,iBAULJ,IAAOC,IAAV,MCkEdQ,EA5FQ,WAAO,IAAD,IAEnBC,EAAWC,cACXC,EAAuBC,aAEzB,SAACC,GAAD,OAAsBA,EAAMC,QALP,EAYrBC,cAHAC,EATqB,EASrBA,SACAC,EAVqB,EAUrBA,aACaC,EAXQ,EAWrBC,UAAaD,OAOjB,OAAIP,EAAUS,iBACH,cAAC,IAAD,CAAUC,GAAG,MAIpB,eAACvB,EAAD,WACI,cAACG,EAAD,sBACA,cAACG,EAAD,uDACA,uBAAMkB,OAAO,IAAIC,SAAUN,GAZlB,SAACO,GACdf,EAASgB,YAAsBD,OAWwBE,YAAU,EAA7D,UACI,eAAC,IAAD,CAAWC,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,QAAxC,2BAGA,cAAC,IAAD,aACIC,KAAK,QACLC,GAAG,QACHC,YAAY,wBACZC,aAAY,OAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAQgB,aAAV,aAAE,EAAeC,QAC7BtB,MAAOuB,YAAOlB,EAAQ,SAAW,QAAU,UAC3CmB,YAAaD,YAAOlB,EAAQ,UACxBF,EAAS,QAAS,CAClBsB,SAAU,oBACVC,QAAS,CACLC,MAAO,4CACPL,QAAS,gCAKzB,eAAC,IAAD,CAAWR,GAAG,OAAd,UACI,eAACrB,EAAD,WACI,cAAC,IAAD,CAAOsB,QAAQ,QAAQD,GAAG,MAAME,QAAQ,WAAxC,sBAGA,cAAC,IAAD,CAAQY,KAAK,mBAAmBC,SAAS,OAAzC,iCAIJ,cAAC,IAAD,aACIX,GAAG,WACHD,KAAK,WACLE,YAAY,sBACZC,aAAY,OAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAQyB,gBAAV,aAAE,EAAkBR,QAChCtB,MAAOuB,YAAOlB,EAAQ,YAAc,QAAU,UAC9CmB,YAAaD,YAAOlB,EAAQ,aACxBF,EAAS,WAAY,CACrBsB,SAAU,uBACVM,UAAW,CACPJ,MAAO,EACPL,QAAS,uBAEbU,UAAW,CACPL,MAAO,GACPL,QAAS,+BAKzB,cAAC,IAAD,CAAQL,KAAK,SAASgB,MAAM,SAASC,WAAS,EAA9C,SAC0B,YAArBpC,EAAUqC,OACP,cAAC,IAAD,CAASC,KAAK,OAEd,YAGR,eAAC1C,EAAD,oCACgC,IAC5B,cAAC,IAAD,CAAQkC,KAAK,UAAb,yC,84BC1Gb,IAAMS,EAAcnD,aAAO,gBAAMoD,EAAN,2BAAiB,cAAC,IAAD,eAAWA,MAAnCpD,CAAH,KAOXqD,EAAkBrD,aAAO,gBAAMoD,EAAN,2BAAiB,cAAC,IAAD,eAAeA,MAAvCpD,CAAH,IAGtBsD,IAAOC,OAKAC,EAAcxD,IAAOC,IAAV,KAYXwD,GARgBzD,IAAOC,IAAV,KAQED,IAAOC,IAAV,IAMnBqD,IAAOC,MAGPD,IAAOI,SCdEC,EAfW,WACtB,OACI,eAACR,EAAD,WACI,cAACE,EAAD,UACI,cAACG,EAAD,UACI,qBAAKI,IAAKC,EAAYC,IAAI,cAGlC,cAACL,EAAD,UACI,cAAC,EAAD,UCHDM,UAXU,WACrB,OACI,qCACI,cAAC,IAAD,IACA,cAAC,IAAD,UACI,cAAC,EAAD","file":"static/js/4.9de1b90d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img15.7466a766.png\";","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    width: 100%;\n`;\n\nexport const StyledTitle = styled.h3`\n    color: ${themeGet(\"colors.text\")};\n    margin-bottom: 5px;\n`;\n\nexport const StyledDesc = styled.p`\n    font-size: 16px;\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 40px;\n`;\n\nexport const StyledLabelWrap = styled.div`\n    margin-bottom: 5px;\n    justify-content: space-between;\n    display: flex;\n`;\n\nexport const StyledDivider = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    text-transform: uppercase;\n    color: ${themeGet(\"colors.text3\")};\n    font-size: 10px;\n    font-weight: 500;\n    font-family: ${themeGet(\"fonts.interui\")};\n    letter-spacing: 0.5px;\n    margin: 15px 0;\n    &:after,\n    &:before {\n        content: \"\";\n        display: block;\n        flex: 1;\n        height: 1px;\n        background-color: ${themeGet(\"colors.light\")};\n    }\n    &:before {\n        margin-right: 10px;\n    }\n    &:after {\n        margin-left: 10px;\n    }\n`;\n\nexport const StyledBottomText = styled.div`\n    margin-top: 20px;\n    text-align: center;\n    font-size: 13px;\n`;\n","import { FC } from \"react\";\nimport {\n    FormGroup,\n    Label,\n    Input,\n    Anchor,\n    Button,\n    Spinner,\n} from \"@doar/components\";\nimport { useForm } from \"react-hook-form\";\nimport { hasKey } from \"@doar/shared/methods\";\nimport { ILoginForm } from \"src/models/auth/user.model\";\nimport { useAppSelector, useAppDispatch } from \"src/redux/hooks\";\nimport { authenticateUserAsync, AuthState } from \"src/redux/slices/auth\";\nimport { RootState } from \"src/redux/store\";\nimport { Navigate } from \"react-router-dom\";\nimport {\n    StyledWrap,\n    StyledTitle,\n    StyledDesc,\n    StyledLabelWrap,\n    StyledBottomText,\n} from \"./style\";\n\nconst SigninForm: FC = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    const dispatch = useAppDispatch();\n    const authState: AuthState = useAppSelector(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        (state: RootState) => state.auth\n    );\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n\n    const onSubmit = (data: ILoginForm) => {\n        dispatch(authenticateUserAsync(data));\n    };\n\n    if (authState.loggedInUserData) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return (\n        <StyledWrap>\n            <StyledTitle>Sign In</StyledTitle>\n            <StyledDesc>Welcome back! Please signin to continue.</StyledDesc>\n            <form action=\"#\" onSubmit={handleSubmit(onSubmit)} noValidate>\n                <FormGroup mb=\"20px\">\n                    <Label display=\"block\" mb=\"5px\" htmlFor=\"email\">\n                        Email address\n                    </Label>\n                    <Input\n                        type=\"email\"\n                        id=\"email\"\n                        placeholder=\"yourname@yourmail.com\"\n                        feedbackText={errors?.email?.message}\n                        state={hasKey(errors, \"email\") ? \"error\" : \"success\"}\n                        showState={!!hasKey(errors, \"email\")}\n                        {...register(\"email\", {\n                            required: \"Email is required\",\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                message: \"invalid email address\",\n                            },\n                        })}\n                    />\n                </FormGroup>\n                <FormGroup mb=\"20px\">\n                    <StyledLabelWrap>\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"password\">\n                            Password\n                        </Label>\n                        <Anchor path=\"/forgot-password\" fontSize=\"13px\">\n                            Forgot password?\n                        </Anchor>\n                    </StyledLabelWrap>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Enter your password\"\n                        feedbackText={errors?.password?.message}\n                        state={hasKey(errors, \"password\") ? \"error\" : \"success\"}\n                        showState={!!hasKey(errors, \"password\")}\n                        {...register(\"password\", {\n                            required: \"Password is required\",\n                            minLength: {\n                                value: 6,\n                                message: \"Minimum length is 6\",\n                            },\n                            maxLength: {\n                                value: 10,\n                                message: \"Minimum length is 10\",\n                            },\n                        })}\n                    />\n                </FormGroup>\n                <Button type=\"submit\" color=\"brand2\" fullwidth>\n                    {authState.status === \"loading\" ? (\n                        <Spinner size=\"xs\" />\n                    ) : (\n                        \"Sign In\"\n                    )}\n                </Button>\n                <StyledBottomText>\n                    Don&apos;t have an account?{\" \"}\n                    <Anchor path=\"/signup\">Create an Account</Anchor>\n                </StyledBottomText>\n            </form>\n        </StyledWrap>\n    );\n};\n\nexport default SigninForm;\n","import styled, { device } from \"@doar/shared/styled\";\nimport { Media, MediaBody } from \"@doar/components\";\n\nexport const StyledMedia = styled(({ ...rest }) => <Media {...rest} />)`\n    position: relative;\n    height: 100%;\n    align-items: stretch;\n    justify-content: center;\n`;\n\nexport const StyledMediaBody = styled(({ ...rest }) => <MediaBody {...rest} />)`\n    align-items: center;\n    display: none;\n    ${device.large} {\n        display: flex;\n    }\n`;\n\nexport const StyledImage = styled.div`\n    width: 600px;\n`;\n\nexport const StyledImgText = styled.div`\n    font-size: 12px;\n    text-align: center;\n    left: 0px;\n    bottom: -10px;\n    position: absolute;\n`;\n\nexport const StyledSignin = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 340px;\n    ${device.large} {\n        margin-left: 50px;\n    }\n    ${device.xlarge} {\n        margin-left: 60px;\n        width: 340px;\n    }\n`;\n","import { FC } from \"react\";\nimport loginImage from \"@doar/shared/images/img15.png\";\nimport SigninForm from \"../../components-doar/signin-form\";\nimport {\n    StyledMedia,\n    StyledMediaBody,\n    StyledImage,\n    StyledSignin,\n} from \"./style\";\n\nconst AuthContainer: FC = () => {\n    return (\n        <StyledMedia>\n            <StyledMediaBody>\n                <StyledImage>\n                    <img src={loginImage} alt=\"Login\" />\n                </StyledImage>\n            </StyledMediaBody>\n            <StyledSignin>\n                <SigninForm />\n            </StyledSignin>\n        </StyledMedia>\n    );\n};\n\nexport default AuthContainer;\n","import React from \"react\";\nimport ContentHeader from \"../../layouts/vertical/content-header\";\nimport ContentBody from \"../../layouts/vertical/content-body\";\nimport AuthContainer from \"../../containers/signin\";\n\nconst SignIn: React.FC = () => {\n    return (\n        <>\n            <ContentHeader />\n            <ContentBody>\n                <AuthContainer />\n            </ContentBody>\n        </>\n    );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}